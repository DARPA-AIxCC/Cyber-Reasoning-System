#!/bin/bash

if [ -t 1 ]
then
    RED="\033[31m"
    GREEN="\033[32m"
    YELLOW="\033[33m"
    BOLD="\033[1m"
    OFF="\033[0m"
else
    RED=
    GREEN=
    YELLOW=
    BOLD=
    OFF=
fi

COMMAND="$1"
REPLACE=false
case "$COMMAND" in
    instrument)
        ;;
    replace)
        REPLACE=true
        ;;
    *)
        echo -e "${RED}error${OFF}: unknown command ${YELLOW}$COMMAND${OFF}"
        exit 1
        ;;
esac

ORIG="$2"
PROG="$ORIG"
if [ ! -x "$PROG" ]
then
    PROG=`which "$PROG"`
fi
if [ ! -x "$PROG" ]
then
    echo -e "${RED}error${OFF}: ${YELLOW}$ORIG${OFF} not found..."
    exit 1
fi

DEBUG=`readelf -S "$PROG" | grep .debug_line`
if [ "$DEBUG" = "" ]
then
    echo -e "${RED}error${OFF}: ${YELLOW}$ORIG${OFF} was not compiled with (-g)..."
    exit 1
fi

BASE=`basename $PROG`

./e9tool -c 4 \
    -M 'file=/(.*\.cpp|.*\.c)/ and (line.entry or BB.entry or I[-1].call) ' \
    -P 'hit(absname,line,(static)addr)@sbfl' \
    -M 'call and (target==&_Exit or target==&_exit)' -P 'quit(%rax)@sbfl' \
    "$PROG" -o "${BASE}.sbfl"

if [ $REPLACE = "true" ]
then
    mv "$ORIG" "${BASE}.orig"
    cp "${BASE}.sbfl" "$ORIG"
fi

